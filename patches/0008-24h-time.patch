diff --git a/src/app/components/message/Time.tsx b/src/app/components/message/Time.tsx
index a512601..3cb94f7 100644
--- a/src/app/components/message/Time.tsx
+++ b/src/app/components/message/Time.tsx
@@ -1,6 +1,8 @@
 import React, { ComponentProps } from 'react';
 import { Text, as } from 'folds';
-import { timeDayMonYear, timeHourMinute, today, yesterday } from '../../utils/time';
+import { timeDayMonYear, timeHourMinute12, timeHourMinute24, today, yesterday } from '../../utils/time';
+import { useSetting } from '../../state/hooks/settings';
+import { settingsAtom } from '../../state/settings';
 
 export type TimeProps = {
   compact?: boolean;
@@ -9,15 +11,16 @@ export type TimeProps = {
 
 export const Time = as<'span', TimeProps & ComponentProps<typeof Text>>(
   ({ compact, ts, ...props }, ref) => {
+    const [useTwelveHourFormat] = useSetting(settingsAtom, 'useTwelveHourFormat');
     let time = '';
     if (compact) {
-      time = timeHourMinute(ts);
+      time = useTwelveHourFormat === true ? timeHourMinute12(ts) : timeHourMinute24(ts);
     } else if (today(ts)) {
-      time = timeHourMinute(ts);
+      time = useTwelveHourFormat === true ? timeHourMinute12(ts) : timeHourMinute24(ts);
     } else if (yesterday(ts)) {
-      time = `Yesterday ${timeHourMinute(ts)}`;
+      time = `Yesterday ${useTwelveHourFormat === true ? timeHourMinute12(ts) : timeHourMinute24(ts)}`;
     } else {
-      time = `${timeDayMonYear(ts)} ${timeHourMinute(ts)}`;
+      time = `${timeDayMonYear(ts)} ${useTwelveHourFormat === true ? timeHourMinute12(ts) : timeHourMinute24(ts)}`;
     }
 
     return (
